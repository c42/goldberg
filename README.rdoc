= Goldberg 0.0.1

(c) Copyright 2010-2011 {C42 Engineering}[http://c42.in]. All Rights Reserved.

A CI server. With pipelines!

Visit http://goldberg.c42.in to see a live Goldberg server.

== Setting up your own Goldberg server

=== Prerequisites

Git and Ruby (we usually use MRI 1.9.2, but any flavour should work). 
RVM if you want to be able to run projects on different rubies.
                                                   
Your project should have a Gemfile for {Bundler}[http://gembundler.com/].

Goldberg currently runs only on Linux/Mac OS X.    

=== Installation

   # If you're on Ubuntu, you might need:
   sudo apt-get install sqlite3 libsqlite3-dev

   git clone git://github.com/c42/goldberg.git
   bundle install
   rake db:migrate

=== Setting up a new repository

   ./bin/goldberg add <url> <name> [command] [--branch <branch_name>]

=== Starting Goldberg

   # Start the CI server and web front-end at port 3000.
   bin/goldberg start [3000]

=== Stopping Goldberg

   # Stop a running CI server
   bin/goldberg stop

=== Tracking build status

Goldberg generates feeds that work with all CruiseControl-compatible monitors like {CCMenu (mac)}[http://ccmenu.sourceforge.net/], {BuildNotify (linux)}[https://bitbucket.org/Anay/buildnotify/wiki/Home] & CCTray (windows). The feed is located in the root and is named <tt>XmlStatusReport.aspx</tt>. eg: http://goldberg.c42.in/XmlStatusReport.aspx

=== Configuration

Goldberg will be checking out your code in ~/.goldberg. If you want to override this create an environment variable called GOLDBERG_PATH.                   

You can configure the poller by copying the <tt>config/goldberg.yml.sample</tt> to <tt>config/goldberg.yml</tt>.

==== Force build

By default, the poller is configured to poll every 10 seconds. Even if you click on "force build," it actually just sets a flag in DB for poller to build the project irrespective of the updates. If you want to it to do a build immediately after clicking on "force build", then change the frequency to 1 second.

PS: Changing the frequency of poller to 1 second will not cause git calls every one second, as the project controls the frequency at which it should be polled as explained below.

==== Project based configuration

Every project in goldberg can have its own custom configuration by means of adding (either on goldberg instance or by checking it in with the codebase) <tt>goldberg_config.rb</tt> at the root of your codebase. As of now only frequency can be updated, but going further this configuration will be used to configure rubies, pipelines, pre/post build hooks etc.

  #Goldberg configuration
  Project.configure do |config|
    config.frequency = 20
    config.ruby = '1.9.2' # Your server needs to have rvm installed for this setting to be considered
    config.environment_variables.update("FOO" => "bar")
    config.after_build Proc.new { |build, project| `touch ~/Desktop/actually_built`}
  end

If you want the project to be checked for updates every 5 seconds, you will need to change the poller frequency to less than 5 seconds using <tt>goldberg.yml</tt> as mentioned above.

=== Help

  # To get man page style help
  ./bin/goldberg help [command]

== Contributors

* Srushtivratha Ambekallu ({srushti}[http://github.com/srushti])
* Jasim A Basheer ({jasim}[http://github.com/jasim])
* Saager Mhatre ({dexterous}[http://github.com/dexterous])
* Tejas Dinkar ({gja}[http://github.com/gja])
* Niranjan Parajape ({achamian}[http://github.com/achamian])
* Todd Sedano ({professor}[http://github.com/professor])
* Drew Olson ({drewolson}[http://github.com/drewolson])
